# This workflow will install Python dependencies, run tests with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python PyTest (API)

on:
  push:
    branches: [ master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]

permissions:
  contents: read

jobs:
  python-pytest:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          # The MySQL docker container requires these environment variables to be set
          # so we can create and migrate the test database.
          # See: https://hub.docker.com/_/mysql
          MYSQL_DATABASE: ${{ secrets.MYSQL_BASE }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASS }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASS }}
        ports:
          # Opens port 3306 on service container and host
          # https://docs.github.com/en/actions/using-containerized-services/about-service-containers
          - 3306:3306
          # Before continuing, verify the mysql container is reachable from the ubuntu host
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3


    strategy:
      matrix:
        python-version: [ "3.8" ]

    steps:
    - name: Checkout üõéÔ∏è
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        echo "--- Installing dependencies"
        python -m pip install --upgrade pip
        pip install pytest flake8
        if [ -f python/requirements.txt ]; then pip install -r python/requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        echo "--- Linting with flake8"
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Test with PyTest
      env:
          MYSQL_BASE: ${{ secrets.MYSQL_BASE }}
          MYSQL_PASS: ${{ secrets.MYSQL_PASS }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
          AUTH_TOKENS: ${{ secrets.AUTH_TOKENS }}
      run: |
        echo "--- Starting PyTest"
        pytest python
