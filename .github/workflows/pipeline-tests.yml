# This workflow will install Python dependencies, run tests with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Pipeline Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read

jobs:
  app-pytest:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ "3.12" ]

    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }} 🐍
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install requirements ⏬
      run: |
        echo "--- Installing PIP"
        python -m pip install --upgrade pip
        echo "--- Installing PyTest prerequisites"
        pip install pytest flake8
        echo "--- Installing requirements"
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8 📝
      run: |
        # stop the build if there are Python syntax errors or undefined names
        echo "--- Linting with flake8"
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Start MongoDB 🌱
      uses: supercharge/mongodb-github-action@1.11.0
      with:
        mongodb-version: ${{ vars.MONGO_VERS }}
        mongodb-username: ${{ vars.MONGO_USER }}
        mongodb-password: ${{ secrets.MONGO_PASS }}
        mongodb-db: ${{ vars.MONGO_BASE }}

    - name: Test with PyTest ⚙️
      env:
          MONGO_HOST: ${{ vars.MONGO_HOST }}
          MONGO_PASS: ${{ secrets.MONGO_PASS }}
          AUTH_TOKENS: ${{ secrets.AUTH_TOKENS }}
      run: |
        echo "--- Starting PyTest"
        pytest

  build-push:
    runs-on: ubuntu-latest

    needs:
    - app-pytest

    # We need to have a successful app-pytest before
    if: ${{ needs.app-pytest.result == 'success' }}

    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v4

    - name: Log in to Docker Hub 🔐
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extracting Metadata 🔧
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ vars.DOCKER_USERNAME }}/${{ vars.DOCKER_IMAGE }}
        tags: |
          type=sha,prefix=,suffix=,format=short
          type=edge

    - name: Build 🏗️ & Push to Docker Hub 🚀  
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
