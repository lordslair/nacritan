apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: nacritan
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nginx
    spec:
      restartPolicy: Always

      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - api
            topologyKey: topology.kubernetes.io/zone

      containers:
      - name: nginx
        image: nginx:stable-alpine
        resources:
          limits:
            memory: 128Mi
            cpu: 200m
          requests:
            memory: 64Mi
            cpu: 100m
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d
        - name: certbot-www-volume
          mountPath: /var/www/certbot
        - name: certbot-certs-volume
          mountPath: /etc/letsencrypt
      - name: certbot
        image: certbot/certbot
        resources:
          limits:
            memory: 128Mi
            cpu: 50m
          requests:
            memory: 16Mi
            cpu: 10m
        command: ["/bin/sh"]
        args: ["-c", "trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;"]
        volumeMounts:
         - name: certbot-www-volume
           mountPath: /var/www/certbot
         - name: certbot-certs-volume
           mountPath: /etc/letsencrypt

      volumes:
      - name: config
        configMap:
          name: nginx-configmap
          items:
          - key: config
            path: site.conf
      - name: certbot-certs-volume
        persistentVolumeClaim:
          claimName: certbot-certs-pvc
      - name: certbot-www-volume
        persistentVolumeClaim:
          claimName: certbot-www-pvc
---
apiVersion: v1
kind: Service
metadata:
  namespace: nacritan
  name: nginx-svc
spec:
  selector:
    app: nginx
  ports:
  - protocol: TCP
    port: 80        # Service port
    targetPort: 80  # Pod's port
    nodePort: 30080 # Node's port (optional; can be auto-assigned)
    name: http
  - protocol: TCP
    port: 443        # Service port
    targetPort: 443  # Pod's port
    nodePort: 30443  # Node's port (optional; can be auto-assigned)
    name: https
  type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: nacritan
  name: nginx-configmap
data:
  config : |
    log_format nacritan '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '$request_time $upstream_response_time '
                        '$pipe $http_x_forwarded_for '
                        '$ssl_protocol $http_authorization';

    #
    # Default server
    #

    server {
      listen        80  default_server;
      access_log    off;
      error_log     off;
      log_not_found off;
      deny          all;

    }

    server {
      listen      80;
      server_name api.nacritan.lordslair.net;
      access_log  /var/log/nginx/access.log nacritan;

      location /.well-known/acme-challenge/ {
        root /var/www/certbot;
      }
    }
    server {
      listen 443 ssl;
      server_name api.nacritan.lordslair.net;
      access_log  /var/log/nginx/access.log nacritan;

      add_header          Strict-Transport-Security 'max-age=63072000; includeSubDomains; preload;' always;

      ssl_session_cache   shared:SSL:10m;
      ssl_session_timeout 1440m;
      ssl_session_tickets off;

      ssl_protocols       TLSv1.2 TLSv1.3;
      ssl_prefer_server_ciphers on;
      ssl_ciphers         ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;

      ssl_certificate     /etc/letsencrypt/live/api.nacritan.lordslair.net/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/api.nacritan.lordslair.net/privkey.pem;

      location / {
        proxy_pass          http://api-svc:5000;
        proxy_http_version  1.1;
        proxy_buffers       16 16k;
        proxy_buffer_size   16k;
        proxy_set_header    Host            $host;
      }
    }

  config-80-only : |
    log_format nacritan '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '$request_time $upstream_response_time '
                        '$pipe $http_x_forwarded_for '
                        '$ssl_protocol $http_authorization';

    #
    # Default server
    #

    server {
      listen        80  default_server;
      access_log    on;
      error_log     on;
      log_not_found on;

    }

    server {
      listen      80;
      server_name api.nacritan.lordslair.net;
      access_log  /var/log/nginx/access.log nacritan;

      location /.well-known/acme-challenge/ {
        root /var/www/certbot;
      }
    }